{"version":3,"sources":["components/Loader/Loader.js","components/Loader/index.js","App.js","components/Pagination/Pagination.js","reportWebVitals.js","index.js"],"names":["Loader","this","props","loading","tabIndex","className","style","backgroundColor","background","opacity","viewBox","xmlns","width","height","stroke","color","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","type","from","to","dur","repeatCount","Component","defaultProps","App","state","showLoader","loadListItem","setState","event","target","name","value","parseInt","setTimeout","onChange","onChangeRange","min","step","max","onClick","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16e1e7e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport class Loader extends Component {\n  render() {\n    return (\n      this.props.loading ?\n      <div tabIndex=\"0\" className=\"loader-overlay is-active is-full-page\" aria-label=\"Loading\" style={{backgroundColor: this.props.background, opacity:0.5}} >\n        <div className=\"loader-background\"></div>\n        <svg viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" width={this.props.width} height={this.props.height} stroke={this.props.color}>\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n              <circle strokeOpacity=\".25\" cx=\"18\" cy=\"18\" r=\"18\"/>\n              <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  from=\"0 18 18\"\n                  to=\"360 18 18\"\n                  dur=\"0.8s\"\n                  repeatCount=\"indefinite\"/>\n              </path>\n            </g>\n          </g>\n        </svg>\n      </div> : <div />\n    )\n  }\n}\n\nLoader.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  color: PropTypes.string,\n  background: PropTypes.string\n};\n\nLoader.defaultProps = {\n  color: '#ff0000',\n  background: '#ffffff'\n}\n\nexport default Loader;\n","import Loader from './Loader';\n\nexport default Loader;\n","import React from 'react';\nimport { Loader } from './components';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLoader: false,\n      height: 100,\n      width: 100,\n      color: '#ff0000',\n      background: '#ffffff'\n    }\n  }\n\n  componentDidMount() {\n    this.loadListItem();\n  }\n\n  loadListItem () {\n    this.setState({ showLoader: false });\n  }\n\n  onChangeRange (event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: name === 'color' || name === 'background' ? value : parseInt(value) });\n  }\n\n  showLoader () {\n    this.setState({ showLoader: true })\n    setTimeout(()=> {\n      this.setState({ showLoader: false })\n    }, 3000)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Loader loading={this.state.showLoader} width={this.state.width} height={this.state.height} color={this.state.color} background={this.state.background} />\n        <h2>React Loader</h2>\n        <div className=\"form-control\">\n          <label>Color </label>\n          <input type=\"color\" name=\"color\" value={this.state.color} onChange={(event)=> this.onChangeRange(event) }/>\n        </div>\n        <div className=\"form-control\">\n          <label>Background color </label>\n          <input type=\"color\" name=\"background\" value={this.state.background} onChange={(event)=> this.onChangeRange(event) } />\n        </div>\n        <div className=\"form-control\">\n          <label>Width</label>\n          <input type=\"range\" min=\"10\" step=\"5\" max=\"256\" value={this.state.width} name=\"width\" onChange={(event)=> this.onChangeRange(event) }/> <span\n          className=\"text-value\">{ this.state.width }</span>\n        </div>\n        <div className=\"form-control\">\n          <label>Height</label>\n          <input type=\"range\" min=\"10\" step=\"5\" max=\"256\" value={this.state.height} name=\"height\" onChange={(event)=> this.onChangeRange(event) }/> <span\n          className=\"text-value\">{ this.state.height }</span>\n        </div>\n        <div className=\"form-control\">\n          <button type=\"button\" onClick={ () => this.showLoader() }>Show Loader</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport class Pagination extends Component {\n  isInFirstPage () {\n    return this.props.currentPage === 1\n  }\n  isInLastPage () {\n    if (this.props.totalPages === 0) {\n      return true\n    }\n    return this.props.currentPage === this.props.totalPages\n  }\n  startPage () {\n    // When on the first page\n    if (this.props.currentPage === 1) {\n      return 1\n    }\n    // When on the last page\n    if (this.props.totalPages < this.props.maxVisibleButtons) {\n      return 1\n    }\n    if (this.props.currentPage === this.props.totalPages) {\n      return this.props.totalPages - this.props.maxVisibleButtons + 1\n    }\n    // When in between\n    return this.props.currentPage - 1\n  }\n  endPage () {\n    if (this.props.totalPages === 0) {\n      return 1\n    }\n    if (this.props.totalPages < this.props.maxVisibleButtons) {\n      return this.props.totalPages\n    }\n    return Math.min(this.startPage() + this.props.maxVisibleButtons - 1, this.props.totalPages)\n  }\n\n  onClickFirstPage = () => {\n    if (this.isInFirstPage()) {\n      return false\n    }\n    this.props.onPageChanged(1)\n  }\n  onClickPreviousPage = () => {\n    if (this.isInFirstPage()) {\n      return false\n    }\n    this.props.onPageChanged(this.props.currentPage - 1)\n  }\n  onClickPage = (page) => {\n    this.props.onPageChanged(page)\n  }\n  onClickNextPage = () => {\n    if (this.isInLastPage()) {\n      return false\n    }\n    this.props.onPageChanged(this.props.currentPage + 1)\n  }\n  onClickLastPage = () => {\n    if (this.isInLastPage()) {\n      return false\n    }\n    this.props.onPageChanged(this.props.totalPages)\n  }\n  isPageActive (page) {\n    return this.props.currentPage === page\n  }\n  render() {\n    var pages = []\n    for (let i = this.startPage(); i <= this.endPage(); i++) {\n      pages.push(\n        <li key={i} className=\"pagination-item\">\n          <button onClick={ () => { this.onClickPage(i) } } className={ this.isPageActive(i) ? 'active': '' }>{ i }</button>\n        </li>\n      )\n    }\n    return (\n      <ul className=\"pagination\">\n        <li className=\"pagination-item\">\n          <button onClick={ () => this.onClickFirstPage() } className={ this.isInFirstPage() ? 'disabled': '' } disabled={ this.isInFirstPage() }>First</button>\n        </li>\n        <li className=\"pagination-item\">\n          <button onClick={ () => this.onClickPreviousPage() } className={ this.isInFirstPage() ? 'disabled': '' } disabled={ this.isInFirstPage() }>«</button>\n        </li>\n        { pages }\n        <li className=\"pagination-item\">\n          <button onClick={ () => this.onClickNextPage() } className={ this.isInLastPage() ? 'disabled':'' } disabled={ this.isInLastPage() }>»</button>\n        </li>\n        <li className=\"pagination-item\">\n          <button onClick={ () => this.onClickLastPage() } className={ this.isInLastPage() ? 'disabled':'' } disabled={ this.isInLastPage() }>Last</button>\n        </li>\n      </ul>\n    )\n  }\n}\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  maxVisibleButtons: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}